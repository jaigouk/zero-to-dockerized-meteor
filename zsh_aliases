#================================
#  GO
#================================
export GOPATH=$HOME/go-dev
export PATH=$HOME/go-dev/bin:$PATH
alias cdsrc="cd $GOPATH/src"

#================================
#  TOKENS
#================================
export DO_ID=xxxxxxx
export DO_TOKEN=xxxxxx
export ETCD_TOKEN=xxxxxxxx

new_etcd_token(){
  curl -X GET https://discovery.etcd.io/new
}
setup_fleet_ui(){
  do_droplets=(xx.xx.xx.xx xx.xx.xx.xx xx.xx.xx.xx)
  for droplet in ${do_droplets[@]}
  do
    ssh -A core@$droplet 'rm -rf ~/.ssh/id_rsa'
    scp /Users/jaigouk/.docker/certs/key.pem core@$droplet:.ssh/id_rsa
    ssh -A core@$droplet 'chown -R core:core /home/core/.ssh; chmod 700 /home/core/.ssh; chmod 600 /home/core/.ssh/authorized_keys'
  done
  fleetctl destroy fleet-ui@{1..3}.service
  fleetctl destroy fleet-ui@.service
  fleetctl start /Users/path_to_fleet_ui_templates/fleet-ui@{1..3}.service
}

#================================
#  DOCKER
#================================


docker-ip(){
  boot2docker ip 2> /dev/null
}
# docker-enter script is in $HOME/bin

# for deleting old containers and images

clear_docker (){
  check_boot2docker=$(boot2docker status | awk '{print $1}')
  if [ $check_boot2docker == 'running' ];then
    docker ps -a | grep 'Exit' | awk '{print $1}' | xargs docker rm &> /dev/null
    docker images | grep '<none>' | awk '{print $3}' | xargs docker rmi &> /dev/null
  else
    echo "boot2docker is down. boot it up!"
    boot2docker up
  fi
}

use-boot2docker(){
  boot2docker start
  export DOCKER_HOST=tcp://192.168.59.103:2376
  export DOCKER_CERT_PATH=$HOME/.boot2docker/certs/boot2docker-vm
  export DOCKER_TLS_VERIFY=1
  BOOT2DOCKER_STATUS=$(boot2docker status)
  RPROMPT="%{$fg[magenta]%}[boot2docker:$BOOT2DOCKER_STATUS]%{$reset_color%}"
}

#================================
#  COREOS / FLEET
#================================

fleetctl-switch(){
  ssh-add ~/.docker/certs/key.pem
  DOCKER_HOST=tcp://$1:2376
  export FLEETCTL_TUNNEL=$1:22
  alias etcdctl="ssh -A core@$1 'etcdctl'"
  alias fleetctl-ssh="fleetctl ssh $(fleetctl list-machines | cut -c1-8 | sed -n 2p)"
  RPROMPT="%{$fg[magenta]%}[fleetctl:$1]%{$reset_color%}"
}
destroy_mongo_replica() {
  export FLEETCTL_TUNNEL=$1:22
  alias etcdctl="ssh -A core@$1 'etcdctl'"
  fleetctl destroy mongo-data@{1..3}.service
  fleetctl destroy mongo@{1..3}.service
  fleetctl destroy mongo@.service
  fleetctl destroy mongo-replica-config.service
  fleetctl destroy mongo-data@{1..3}.service
  etcdctl rm /mongo/replica/siteRootAdmin --recursive
  etcdctl rm /mongo/replica/siteUserAdmin --recursive
  etcdctl rm /mongo/replica --recursive
  etcdctl set /mongo/replica/name myreplica
}